{"version":3,"sources":["components/Book.js","actions/constants.js","components/CategoryFilter.js","containers/BookList.js","actions/index.js","containers/BookForm.js","components/App.js","reducers/index.js","reducers/books.js","reducers/filter.js","store.js","serviceWorker.js","index.js"],"names":["Book","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","className","id","props","category","title","onClick","removeBtn","React","Component","initialState","books","filters","CategoryFilter","_getPrototypeOf2","_len","length","args","Array","_key","call","concat","handleChange","event","selector","target","toConsumableArray","name","onChange","map","idx","BookList","handleRemoveBook","onRemoveBook","handleFilterChange","filter","onFilterChange","_this2","CategoryFilter_CategoryFilter","inventory","book","categories","includes","Book_Book","connect","state","dispatch","bookId","type","filterCategory","BookForm","setState","handleOptions","handleSubmit","preventDefault","submitNewBook","bind","assertThisInitialized","placeholder","createBook","library","add","faUser","App","react_fontawesome_index_es","icon","containers_BookList","containers_BookForm","rootReducer","combineReducers","undefined","action","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce7e36a5.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Book.css';\n\nexport class Book extends React.Component {\n  render() {\n    return (\n      <div className = 'bookCard' id = { this.props.id }>\n        <div className = 'bookCardLeft'>\n          <p className = 'bookCategory'>{ this.props.category }</p>\n          <p className = 'bookTitle'>{ this.props.title }</p>\n          <p className = 'bookAuthor'>Author</p>\n          <p className = 'bookLinks'>\n            <span className = 'bookLink'>Comments</span>\n            <span className = 'bookLink' onClick = { () => this.props.removeBtn(this.props.id) }>\n              Remove\n            </span>\n            <span className = 'bookLink'>Edit</span>\n          </p>\n        </div>\n        <div className = 'bookCardMiddle'>\n          <div className = 'bookProgressBar'>\n\n          </div>\n          <div className = 'bookCardMiddleRight'>\n            <p className = 'bookProgressNumber'>0%</p>\n            <p className = 'bookProgressComplete'>Completed</p>\n          </div>\n        </div>\n        <div className = 'bookCardRight'>\n          <p className = 'bookChapterHeader'>CURRENT CHAPTER</p>\n          <p className = 'bookChapter'>Introduction</p>\n          <button className = 'progressBtn' >\n            Update Progress\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","export const CREATE_BOOK = 'CREATE_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const GET_BOOKS = 'GET_BOOKS';\n\nexport const initialState = {\n  books: [\n    {id: 1234, title: \"ABC's\", category: 'Kids'},\n    {id: 2345, title: \"Birds\", category: 'Learning'},\n    {id: 3456, title: \"USA\", category: 'History'}\n  ],\n  filters: [\n    'Action',\n    'Biography',\n    'History',\n    'Horror',\n    'Kids',\n    'Learning',\n    'Sci-Fi'\n  ]\n}\n","import React from 'react';\nimport { initialState } from '../actions/constants';\nimport '../css/CategoryFilter.css';\n\nexport class CategoryFilter extends React.Component {\n\n  handleChange = event => {\n    this.props.selector(event.target.value);\n  }\n\n  render() {\n\n    const filters = ['All', ...initialState.filters];\n\n    return (\n      <div className = 'filter'>\n        <span className = 'filterTag'>Filter:</span>\n        <select className = 'filterSelector' name = 'filters' onChange = { this.handleChange }>\n          { filters.map( (category, idx) => (\n            <option value = { category } key = { idx }>{ category }</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Book } from '../components/Book';\nimport { CategoryFilter } from '../components/CategoryFilter'\nimport { connect } from 'react-redux';\nimport { removeBook, changeFilter } from '../actions/index';\n\nimport '../css/BookList.css';\n\nclass BookList extends React.Component {\n\n  handleRemoveBook = id => {\n    this.props.onRemoveBook(id);\n  };\n\n  handleFilterChange = filter => {\n    this.props.onFilterChange(filter);\n  };\n\n  render() {\n    return(\n      <div className = 'BookList'>\n        <CategoryFilter  selector = { this.handleFilterChange }/>\n        { this.props.inventory.filter( book => this.props.categories.includes(book.category)).map( (book, idx) => (\n          <Book\n            key = { idx }\n            id = { book.id }\n            title = { book.title }\n            category = { book.category }\n            removeBtn = { this.handleRemoveBook }\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.inventory.books,\n    categories: state.categories.filters\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRemoveBook: bookId => {\n      dispatch(removeBook(bookId));\n    },\n    onFilterChange: filterCategory => {\n      dispatch(changeFilter(filterCategory));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n","// define all redux actions\nimport { CREATE_BOOK, REMOVE_BOOK, CHANGE_FILTER, GET_BOOKS,  } from './constants';\n\nexport const createBook = book => {\n  return {\n    type: CREATE_BOOK,\n    book: book\n  }\n}\n\nexport const removeBook = id => {\n  return {\n    type: REMOVE_BOOK,\n    id: id\n  }\n}\n\nexport const changeFilter = filter => {\n  return {\n    type: CHANGE_FILTER,\n    filter: filter\n  }\n}\n\nexport const getBooks = () => {\n  return {\n    type: GET_BOOKS\n  }\n}\n","import React from 'react';\nimport '../css/BookForm.css';\n\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions/index';\nimport { initialState } from '../actions/constants'\n\nclass BookForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { id: 1, title: '', category: 'Action' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptions = this.handleOptions.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleOptions = event => {\n    // prevent book category from being 'All'\n    this.setState({\n      category: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    // prevent an empty title\n    // prevent reuse of id and duplicates\n    event.preventDefault();\n    this.props.submitNewBook(this.state);\n    this.setState({\n      id: (this.state.id + 1), // change this to redux store state and not this component state\n      title: '',\n      category: 'Action'\n    });\n  }\n\n  render() {\n    return (\n      <form className = 'bookForm'>\n        <p className = 'formHeader'>ADD NEW BOOK</p>\n        <div className = 'flexDiv'>\n          <input className = 'formInput' type = 'text' name = 'title' value = { this.state.title } onChange = { this.handleChange } placeholder = 'Book title'/>\n          <select className = 'formSelector' name = 'categories' onChange = { this.handleOptions } value = { this.state.category }>\n            { initialState.filters.map( (category, idx) => (\n              <option value = { category } key = { idx }>{ category }</option>\n            ))}\n          </select>\n          <button className = 'formBtn' onClick = { this.handleSubmit }>\n            Add Book\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitNewBook: book => {\n      dispatch(createBook(book));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookForm)\n","import React from 'react';\nimport BookList from '../containers/BookList';\nimport BookForm from '../containers/BookForm';\nimport '../css/App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faUser)\n\nexport class App extends React.Component {\n  render() {\n    return (\n      <div className = 'App'>\n        <div className = 'header'>\n          <div className = 'headerLinks'>\n            <span className = 'logo'>Bookstore CMS</span>\n            <span className = 'headerLink'>Books</span>\n            <span className = 'headerLink'>Categories</span>\n          </div>\n          <div className = 'userCircle'>\n            <FontAwesomeIcon icon = 'user' />\n          </div>\n        </div>\n        <div className = 'container'>\n          <BookList />\n          <BookForm />\n        </div>\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport { bookReducer } from './books';\nimport { filterReducer } from './filter';\n\nexport const rootReducer = combineReducers({\n  inventory: bookReducer,\n  categories: filterReducer\n});\n\n\n// export const rootReducer = bookReducer;\n","import {\n  initialState,\n  CREATE_BOOK,\n  REMOVE_BOOK,\n  GET_BOOKS\n} from '../actions/constants';\n\n\nexport const bookReducer = ( state = initialState, action ) => {\n  switch (action.type) {\n    case CREATE_BOOK:\n      return {\n        books: [ action.book, ...state.books ]\n       }\n    case REMOVE_BOOK:\n      return {\n        books: state.books.filter( book => book.id !== action.id )\n      }\n    case GET_BOOKS:\n      return {\n        books: [...state.books]\n      }\n    default:\n      return state\n  }\n}\n","import { initialState, CHANGE_FILTER } from '../actions/constants';\n\nexport const filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      if (action.filter === 'All') {\n        return {\n          filters: [...initialState.filters]\n        }\n      } else {\n        return {\n          filters: [action.filter]\n        }\n      }\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers/index';\n\nexport const store = createStore(rootReducer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store = { store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}