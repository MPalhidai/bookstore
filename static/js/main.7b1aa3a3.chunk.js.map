{"version":3,"sources":["components/Nav.js","components/Book.js","actions/constants.js","components/CategoryFilter.js","actions/index.js","actions/async.js","containers/BookList.js","containers/BookForm.js","containers/EditForm.js","components/Comment.js","containers/BookView.js","containers/CommentForm.js","components/Routes.js","components/App.js","reducers/index.js","reducers/books.js","reducers/comments.js","reducers/filter.js","reducers/activeBook.js","store.js","serviceWorker.js","index.js"],"names":["library","add","faUser","Nav","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Link","to","react_fontawesome_index_es","icon","React","Component","Book","_this","book","id","props","category","title","author","current_page","current_chapter","total_pages","percentage","Math","floor","concat","onClick","removeBtn","dist_default","styles","path","stroke","progressBtn","API_URL","initialState","books","filters","comments","CategoryFilter","_getPrototypeOf2","_len","length","args","Array","_key","call","handleChange","event","selector","target","toConsumableArray","name","onChange","map","idx","changeBook","type","updateBook","dispatch","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","editBook","catch","error","console","log","deleteBook","bookId","BookList","handleRemoveBook","window","confirm","handleEditProgress","prompt","handleFilterChange","filter","dispatchFilter","_this2","CategoryFilter_CategoryFilter","inventory","categories","includes","Book_Book","getBooks","mapDispatchToProps","setBooks","changeFilter","connect","state","BookForm","setState","defineProperty","handleOptions","handleSubmit","preventDefault","addBook","bind","assertThisInitialized","placeholder","createBook","EditForm","activeBook","Comment","user","rating","content","BookView","opinions","comment","Comment_Comment","book_id","getBook","getComments","setBook","setComments","CommentForm","addComment","Number","createComment","Routes","Switch","Route","exact","render","containers_BookList","containers_BookForm","containers_BookView","match","params","containers_CommentForm","containers_EditForm","App","Nav_Nav","Routes_Routes","rootReducer","combineReducers","undefined","action","index","findIndex","slice","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","ReactDOM","es","BrowserRouter","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b1aa3a3.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/Nav.css';\nimport { Link } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faUser)\n\nexport class Nav extends React.Component {\n  render() {\n    return (\n      <div className = 'Nav'>\n        <div className = 'header'>\n          <div className = 'headerLinks flexDiv'>\n            <Link to = '/' className = 'logoLink'>Bookstore CMS</Link>\n            <Link to = '/' className = 'booksLink'>Books</Link>\n            <Link to = '/' className = 'categoryLink'>Categories</Link>\n          </div>\n          <div className = 'userCircle'>\n            <FontAwesomeIcon icon = 'user' />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport '../css/Book.css';\nimport { Link } from 'react-router-dom';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport class Book extends React.Component {\n\n  render() {\n\n    const book = {\n      id: this.props.id,\n      category: this.props.category,\n      title: this.props.title,\n      author: this.props.author,\n      current_page: this.props.current_page,\n      current_chapter: this.props.current_chapter,\n      total_pages: this.props.total_pages\n    }\n\n    let percentage = Math.floor(book.current_page / book.total_pages * 100);\n\n    return (\n      <div className = 'bookCard' id = { book.id }>\n        <div className = 'bookCardLeft'>\n          <p className = 'bookCategory'>{ book.category }</p>\n          <p className = 'bookTitle'>{ book.title }</p>\n          <p className = 'bookAuthor'>{ book.author }</p>\n          <p className = 'bookLinks'>\n            <Link to = { `/books/${ book.id }` } className = 'bookLink'>Comments</Link>\n            <span className = 'bookLink' onClick = { () => this.props.removeBtn(book.id) }>\n              Remove\n            </span>\n            <Link to = { `/books/update/${ book.id }` } className = 'bookLink'>Edit</Link>\n          </p>\n        </div>\n        <div className = 'bookCardMiddle'>\n          <CircularProgressbar\n            percentage = { percentage }\n            className = 'bookProgressBar'\n            styles={{\n              path: { stroke: \"#379cf6\" }\n            }}\n          />\n          <div className = 'bookCardMiddleRight'>\n            <p className = 'bookProgressNumber'>{ percentage }%</p>\n            <p className = 'bookProgressComplete'>Completed</p>\n          </div>\n        </div>\n        <div className = 'bookCardRight'>\n          <p className = 'bookChapterHeader'>CURRENT CHAPTER</p>\n          <p className = 'bookChapter'>{ book.current_chapter }</p>\n          <button className = 'progressBtn' onClick = { () => this.props.progressBtn(book) }>\n            Update Progress\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","export const CREATE_BOOK = 'CREATE_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const CHANGE_BOOK = 'CHANGE_BOOK';\nexport const SET_BOOKS = 'SET_BOOKS';\nexport const SET_BOOK = 'SET_BOOK';\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\nexport const SET_COMMENTS = 'SET_COMMENTS';\nexport const EDIT_BOOK = 'EDIT_BOOK';\n\nexport const API_URL = 'https://mybooksapi.herokuapp.com';\n\nexport const initialState = {\n  books: [],\n  filters: [\n    'Action',\n    'Biography',\n    'History',\n    'Horror',\n    'Kids',\n    'Learning',\n    'Sci-Fi'\n  ],\n  book: {},\n  comments: []\n}\n","import React from 'react';\nimport '../css/CategoryFilter.css';\nimport { initialState } from '../actions/constants';\n\n\nexport class CategoryFilter extends React.Component {\n\n  handleChange = event => {\n    this.props.selector(event.target.value);\n  }\n\n  render() {\n\n    const filters = ['All', ...initialState.filters];\n\n    return (\n      <div className = 'filter'>\n        <span className = 'filterTag'>Filter:</span>\n        <select className = 'filterSelector' name = 'filters' onChange = { this.handleChange }>\n          { filters.map( (category, idx) => (\n            <option value = { category } key = { idx }>{ category }</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n","// define all redux actions\nimport {\n  CREATE_BOOK,\n  REMOVE_BOOK,\n  CHANGE_FILTER,\n  CHANGE_BOOK,\n  SET_BOOK,\n  CREATE_COMMENT,\n  EDIT_BOOK,\n  SET_BOOKS,\n  SET_COMMENTS\n} from './constants';\n\nexport const createBook = book => {\n  return {\n    type: CREATE_BOOK,\n    book: book\n  }\n}\n\nexport const removeBook = id => {\n  return {\n    type: REMOVE_BOOK,\n    id: id\n  }\n}\n\nexport const changeFilter = filter => {\n  return {\n    type: CHANGE_FILTER,\n    filter: filter\n  }\n}\n\nexport const changeBook = book => {\n  return {\n    type: CHANGE_BOOK,\n    book: book\n  }\n}\n\nexport const setBook = book => {\n  return {\n    type: SET_BOOK,\n    book: book\n  }\n}\n\nexport const createComment = comment => {\n  return {\n    type: CREATE_COMMENT,\n    comment: comment\n  }\n}\n\nexport const editBook = book => {\n  return {\n    type: EDIT_BOOK,\n    book: book\n  }\n}\n\nexport const setBooks = books => {\n  return {\n    type: SET_BOOKS,\n    books: books\n  }\n}\n\nexport const setComments = comments => {\n  return {\n    type: SET_COMMENTS,\n    comments: comments\n  }\n}\n","import { API_URL } from './constants';\nimport { setBooks, setBook, setComments, createBook, editBook, removeBook, createComment, changeFilter } from './index';\n\nexport const getBooks = () => {\n  return dispatch => {\n    return fetch(`${API_URL}/books`)\n      .then(response => response.json())\n      .then(books => {\n        dispatch(setBooks(books))\n      })\n      .catch(error => console.log(error));\n  };\n}\n\nexport const getBook = bookId => {\n  return dispatch => {\n    return fetch(`${API_URL}/books/${bookId}`)\n      .then(response => response.json())\n      .then(book => {\n        dispatch(setBook(book))\n      })\n      .catch(error => console.log(error));\n  };\n}\n\nexport const getComments = bookId => {\n  return dispatch => {\n    return fetch(`${API_URL}/books/${bookId}/comments`)\n      .then(response => response.json())\n      .then(comments => {\n        dispatch(setComments(comments))\n      })\n      .catch(error => console.log(error));\n  };\n}\n\nexport const addBook = book => {\n  return dispatch => {\n    return fetch(`${API_URL}/books`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ book: book })\n    })\n      .then(response => response.json())\n      .then(book => {\n        dispatch(createBook(book))\n      })\n      .catch(error => console.log(error))\n  };\n}\n\nexport const updateBook = book => {\n  return dispatch => {\n    return fetch(`${API_URL}/books/${book.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ book: book })\n    })\n      .then(response => response.json())\n      .then(book => {\n        dispatch(editBook(book))\n      })\n      .catch(error => console.log(error))\n  };\n}\n\nexport const deleteBook = bookId => {\n  return dispatch => {\n    return fetch(`${API_URL}/books/${bookId}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ book: bookId })\n    })\n      .then(response => {\n        dispatch(removeBook(bookId))\n      })\n      .catch(error => console.log(error))\n  };\n}\n\nexport const addComment = comment => {\n  return dispatch => {\n    return fetch(`${API_URL}/comments`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ comment: comment })\n    })\n      .then(response => response.json())\n      .then(comment => {\n        dispatch(createComment(comment))\n      })\n      .catch(error => console.log(error))\n  };\n}\n\nexport const dispatchFilter = filter => {\n  return dispatch => {\n    return dispatch(changeFilter(filter))\n  }\n}\n","import React from 'react';\nimport '../css/BookList.css';\nimport { Book } from '../components/Book';\nimport { CategoryFilter } from '../components/CategoryFilter';\nimport { connect } from 'react-redux';\nimport { getBooks, deleteBook, dispatchFilter, updateBook } from '../actions/async';\n\nclass BookList extends React.Component {\n\n  handleRemoveBook = id => {\n    if(window.confirm('Are you sure you want to remove this book?')){\n      this.props.deleteBook(id);\n    }\n  };\n\n  handleEditProgress = book => {\n    let value = prompt('What page are you on now?');\n    if(value) {\n      book.current_page = value;\n      this.props.updateBook(book);\n    }\n  };\n\n  handleFilterChange = filter => {\n    this.props.dispatchFilter(filter);\n  };\n\n  render() {\n    return(\n      <div className = 'BookList'>\n        <CategoryFilter  selector = { this.handleFilterChange }/>\n        { this.props.inventory.filter( book => this.props.categories.includes(book.category)).map( (book, idx) => (\n          <Book\n            key = { idx }\n            id = { book.id }\n            title = { book.title }\n            author = { book.author }\n            category = { book.category }\n            current_page = { book.current_page }\n            current_chapter = { book.current_chapter }\n            total_pages = { book.total_pages }\n            removeBtn = { this.handleRemoveBook }\n            progressBtn = { this.handleEditProgress }\n          />\n        ))}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.getBooks()\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.inventory,\n    categories: state.categories\n  }\n};\n\nconst mapDispatchToProps = {\n  getBooks,\n  deleteBook,\n  dispatchFilter,\n  updateBook\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);\n","import React from 'react';\nimport '../css/Form.css';\n\nimport { connect } from 'react-redux';\nimport { addBook } from '../actions/async';\nimport { initialState } from '../actions/constants'\n\nclass BookForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      author: '',\n      category: 'Action',\n      current_page: '',\n      current_chapter: '',\n      total_pages: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptions = this.handleOptions.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleOptions = event => {\n    // prevent book category from being 'All'\n    this.setState({\n      category: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    // prevent an empty title\n    // prevent reuse of id and duplicates\n    event.preventDefault();\n    this.props.addBook(this.state);\n    this.setState({\n      title: '',\n      author: '',\n      category: 'Action',\n      current_page: '',\n      current_chapter: '',\n      total_pages: ''\n    });\n  }\n\n  render() {\n    return (\n      <form className = 'Form'>\n        <p className = 'formHeader'>ADD NEW BOOK <span className = 'formHeaderSub'>* all fields required</span></p>\n        <div className = 'flexDiv row'>\n          <input className = 'bookFormInput' type = 'text' name = 'title' value = { this.state.title } onChange = { this.handleChange } placeholder = 'Book title'/>\n          <select className = 'formSelector' name = 'categories' onChange = { this.handleOptions } value = { this.state.category }>\n            { initialState.filters.map( (category, idx) => (\n              <option value = { category } key = { idx }>{ category }</option>\n            ))}\n          </select>\n          <button className = 'formBtn' onClick = { this.handleSubmit }>\n            Add Book\n          </button>\n        </div>\n        <div className = 'flexDiv'>\n          <input className = 'bookFormValue' type = 'text' name = 'author' value = { this.state.author } onChange = { this.handleChange } placeholder = 'Author'/>\n          <input className = 'bookFormValue' type = 'number' name = 'total_pages' value = { this.state.total_pages } onChange = { this.handleChange } placeholder = 'Total Pages'/>\n          <input className = 'bookFormValue' type = 'number' name = 'current_page' value = { this.state.current_page } onChange = { this.handleChange } placeholder = 'Current Page'/>\n          <input className = 'bookFormValue' type = 'text' name = 'current_chapter' value = { this.state.current_chapter } onChange = { this.handleChange } placeholder = 'Current Chapter'/>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n  addBook\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookForm)\n","import React from 'react';\nimport '../css/Form.css';\n\nimport { connect } from 'react-redux';\nimport { updateBook } from '../actions/async';\nimport { initialState } from '../actions/constants';\nimport { changeBook } from '../actions/index';\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    let book = this.props.book;\n    this.state = {\n      id: book.id,\n      title: book.title,\n      category: book.category,\n      author: book.author,\n      total_pages: book.total_pages,\n      current_page: book.current_page,\n      current_chapter: book.current_chapter\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOptions = this.handleOptions.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleOptions = event => {\n    this.setState({\n      category: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.updateBook(this.state);\n    this.props.changeBook(this.state);\n  }\n\n  render() {\n    return (\n      <form className = 'Form'>\n        <p className = 'formHeader'>EDIT THIS BOOK</p>\n        <div className = 'flexDiv row'>\n          <div className = 'flexDiv col'>\n            <p className = 'fieldLabel'>Title:</p>\n            <input className = 'bookFormInput' type = 'text' name = 'title' value = { this.state.title } onChange = { this.handleChange } placeholder = { this.state.title }/>\n          </div>\n          <div className = 'flexDiv col'>\n            <p className = 'fieldLabel'>Category:</p>\n            <select className = 'formSelector' name = 'categories' onChange = { this.handleOptions } value = { this.state.category }>\n              { initialState.filters.map( (category, idx) => (\n                <option value = { category } key = { idx }>{ category }</option>\n              ))}\n            </select>\n          </div>\n          <button className = 'formBtn' onClick = { this.handleSubmit }>\n            Edit Book\n          </button>\n        </div>\n        <div className = 'flexDiv row'>\n          <div className = 'flexDiv col'>\n            <p className = 'fieldLabel'>Author:</p>\n            <input className = 'bookFormValue' type = 'text' name = 'author' value = { this.state.author } onChange = { this.handleChange } placeholder = { this.state.author }/>\n          </div>\n          <div className = 'flexDiv col'>\n            <p className = 'fieldLabel'>Total Pages:</p>\n            <input className = 'bookFormValue' type = 'number' name = 'total_pages' value = { this.state.total_pages } onChange = { this.handleChange } placeholder = { this.state.total_pages }/>\n          </div>\n          <div className = 'flexDiv col'>\n            <p className = 'fieldLabel'>Current Page:</p>\n            <input className = 'bookFormValue' type = 'number' name = 'current_page' value = { this.state.current_page } onChange = { this.handleChange } placeholder = { this.state.current_page }/>\n          </div>\n          <div className = 'flexDiv'>\n            <p className = 'fieldLabel'>Current Chapter:</p>\n            <input className = 'bookFormValue' type = 'text' name = 'current_chapter' value = { this.state.current_chapter } onChange = { this.handleChange } placeholder = { this.state.current_chapter }/>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inventory: state.inventory,\n    book: state.activeBook\n  }\n}\n\nconst mapDispatchToProps = {\n  updateBook,\n  changeBook\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm)\n","import React from 'react';\nimport '../css/Comment.css';\n\n// comment - rating, content, user_id, book_id\n// Cool feature if the comment could check how much the user has read the book\n\nexport class Comment extends React.Component {\n  render() {\n    return (\n      <div className = 'commentCard' id = { this.props.id }>\n        <div className = 'flexDiv'>\n          <div className = 'commentCardLeft'>\n            <p className = 'commentUser'>{ this.props.user }</p>\n          </div>\n          <div className = 'commentCardRight'>\n            <p className = 'commentRating'>Rating: { this.props.rating }</p>\n          </div>\n        </div>\n        <div className = 'commentCardBottom'>\n          <p className = 'commentContent'>{ this.props.content }</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport '../css/BookView.css';\nimport { Book } from '../components/Book';\nimport { Comment } from '../components/Comment';\nimport { connect } from 'react-redux';\nimport { getBook, getComments, deleteBook, updateBook } from '../actions/async';\nimport { changeBook } from '../actions/index';\n\nclass BookView extends React.Component {\n\n  handleRemoveBook = id => {\n    if(window.confirm('Are you sure you want to remove this book?')){\n      this.props.deleteBook(id);\n    }\n  };\n\n  handleEditProgress = book => {\n    let value = prompt('What page are you on now?');\n    if(value) {\n      book.current_page = value;\n      this.props.updateBook(book);\n      this.props.changeBook(book);\n    }\n  };\n\n  render() {\n    let book = this.props.book;\n    return(\n      <div className = 'BookView'>\n        <Book\n          id = { book.id }\n          title = { book.title }\n          author = { book.author }\n          category = { book.category }\n          current_page = { book.current_page }\n          current_chapter = { book.current_chapter }\n          total_pages = { book.total_pages }\n          removeBtn = { this.handleRemoveBook }\n          progressBtn = { this.handleEditProgress }\n        />\n        <div className = 'CommentList'>\n          { this.props.opinions.map( (comment, idx) => (\n            <Comment\n              key = { idx }\n              id = { comment.id }\n              rating = { comment.rating }\n              content = { comment.content }\n              book_id = { comment.book_id }\n              user = { comment.user }\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.props.getBook(this.props.bookId)\n    this.props.getComments(this.props.bookId)\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    book: state.activeBook,\n    opinions: state.opinions\n  }\n};\n\nconst mapDispatchToProps = {\n  getBook,\n  getComments,\n  deleteBook,\n  updateBook,\n  changeBook\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookView);\n","import React from 'react';\nimport '../css/Form.css';\n\nimport { connect } from 'react-redux';\nimport { addComment } from '../actions/async';\n\nclass CommentForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: '',\n      content: '',\n      book_id: Number(this.props.bookId),\n      user: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addComment(this.state);\n    this.setState({\n      content: '',\n      rating: '',\n      user: ''\n    });\n  }\n\n  render() {\n    return (\n      <form className = 'Form'>\n        <p className = 'formHeader'>ADD NEW COMMENT</p>\n        <div className = 'flexDiv'>\n          <input className = 'commentFormInput' type = 'text' name = 'user' value = { this.state.user } onChange = { this.handleChange } placeholder = 'Name' />\n          <input className = 'commentFormInput' type = 'number' name = 'rating' value = { this.state.rating } onChange = { this.handleChange } placeholder = 'Rating 0 - 100' />\n          <button className = 'formBtn' onClick = { this.handleSubmit }>\n            Add Comment\n          </button>\n        </div>\n        <div className = 'centerDiv'>\n          <textarea className = 'commentFormTextBox' type = 'text' name = 'content' value = { this.state.content } onChange = { this.handleChange } placeholder = 'This book is great!!!'/>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n  addComment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentForm)\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport BookList from '../containers/BookList';\nimport BookForm from '../containers/BookForm';\nimport EditForm from '../containers/EditForm';\nimport BookView from '../containers/BookView';\nimport CommentForm from '../containers/CommentForm';\n\nexport class Routes extends React.Component {\n  render() {\n    return(\n      <Switch>\n        <Route exact path = '/my/' render = { props =>\n          <div>\n            <BookList />\n            <BookForm />\n          </div>\n        } />\n        <Route exact path = '/books/:id' render = { props =>\n          <div>\n            <BookView bookId = { props.match.params.id } />\n            <CommentForm bookId = { props.match.params.id } />\n          </div>\n        } />\n        <Route exact path = '/books/update/:id' render = { props =>\n          <div>\n            <BookView bookId = { props.match.params.id } />\n            <EditForm bookId = { props.match.params.id } />\n          </div>\n        } />\n      </Switch>\n    );\n  }\n}\n","import React from 'react';\nimport '../css/App.css';\nimport { Nav } from './Nav';\nimport { Routes } from './Routes';\n\nexport class App extends React.Component {\n  render() {\n    return (\n      <div className = 'App'>\n        <Nav />\n        <div className = 'container'>\n          <Routes />\n        </div>\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport { bookReducer } from './books';\nimport { commentReducer } from './comments';\nimport { filterReducer } from './filter';\nimport { activeBookReducer } from './activeBook';\n\nexport const rootReducer = combineReducers({\n  inventory: bookReducer,\n  opinions: commentReducer,\n  categories: filterReducer,\n  activeBook: activeBookReducer\n});\n","import {\n  initialState,\n  SET_BOOKS,\n  CREATE_BOOK,\n  REMOVE_BOOK,\n  EDIT_BOOK\n} from '../actions/constants';\n\n\nexport const bookReducer = ( state = initialState.books, action ) => {\n  switch (action.type) {\n    case SET_BOOKS:\n      return action.books\n    case CREATE_BOOK:\n      return [ ...state, action.book ]\n    case REMOVE_BOOK:\n      return state.filter( book => book.id !== action.id )\n    case EDIT_BOOK:\n      const index = state.findIndex(book => book.id === action.book.id)\n      return [ ...state.slice(0, index), action.book, ...state.slice(index+1) ]\n    default:\n      return state\n  }\n}\n","import {\n  initialState,\n  CREATE_COMMENT,\n  SET_COMMENTS\n} from '../actions/constants';\n\n\nexport const commentReducer = ( state = initialState.comments, action ) => {\n  switch (action.type) {\n    case CREATE_COMMENT:\n      return [ action.comment, ...state ]\n    case SET_COMMENTS:\n      return action.comments\n    default:\n      return state\n  }\n}\n","import { initialState, CHANGE_FILTER } from '../actions/constants';\n\nexport const filterReducer = (state = initialState.filters, action) => {\n  switch (action.type) {\n    case CHANGE_FILTER:\n      if (action.filter === 'All') {\n        return [...initialState.filters]\n      } else {\n        return [action.filter]\n      }\n    default:\n      return state;\n  }\n}\n","import {\n  initialState,\n  SET_BOOK,\n  CHANGE_BOOK\n} from '../actions/constants';\n\n\nexport const activeBookReducer = ( state = initialState.book, action ) => {\n  switch (action.type) {\n    case SET_BOOK:\n    case CHANGE_BOOK:\n      return action.book\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/index';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store = { store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}